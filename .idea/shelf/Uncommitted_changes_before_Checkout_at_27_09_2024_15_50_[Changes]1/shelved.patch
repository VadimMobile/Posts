Index: src/main/kotlin/main.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>data class Likes(val count: Int = 0)\r\ndata class Post(\r\n    val id: Int?, val authorId: Int?, val authorName: String?, val content: String?, val published: Long?,\r\n    val likes: Likes = Likes(), val canPin: Boolean, val canDelete: Boolean, val canEdit: Boolean, val isPinned: Boolean,\r\n)\r\n\r\nobject WallService {\r\n    private var posts = emptyArray<Post>()\r\n    private var postId = 0\r\n\r\n    fun clear() {\r\n        posts = emptyArray()\r\n    }\r\n\r\n    fun add(post: Post): Post {\r\n        posts += post.copy(id = ++postId, likes = post.likes.copy())\r\n        return posts.last()\r\n    }\r\n\r\n    fun printPosts() {\r\n        for (post in posts)\r\n            println(post)\r\n    }\r\n\r\n    fun update(newPost: Post): Boolean {\r\n        for ((index, post) in posts.withIndex()) {\r\n            if (posts[index].id == newPost.id) {\r\n                posts[index] = newPost.copy(likes = post.likes.copy())\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}\r\n\r\nfun main() {\r\n    val likes = Likes(100)\r\n    WallService.add(Post(1, 3,\"name\", \"content\", 254, likes = likes ,\r\n        true, true, true, true))\r\n    WallService.add(Post(1, 3,\"name\", \"content2\", 254, likes = likes ,\r\n        true, true, true, true))\r\n    WallService.printPosts()\r\n    println(WallService.update(Post(1, 3,\"name\", \"content3\", 254, likes = likes ,\r\n        true, true, true, true)))\r\n    WallService.printPosts()\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/kotlin/main.kt b/src/main/kotlin/main.kt
--- a/src/main/kotlin/main.kt	(revision 31a83426c7cc0ca826c50b94bd1c42d9acc04425)
+++ b/src/main/kotlin/main.kt	(date 1727441398031)
@@ -32,6 +32,25 @@
         return false
     }
 }
+abstract class Attachment () {
+
+}
+
+class Audio
+class AudioAttachment(val audio: Audio) : Attachment()
+
+class Photo
+class PhotoAttachment(val audio: Photo) : Attachment()
+
+class Video
+class VideoAttachment(val audio: Video) : Attachment()
+
+class Doc
+class DocAttachment(val audio: Doc) : Attachment()
+
+class Linc
+class LincAttachment(val audio: Linc) : Attachment()
+
 
 fun main() {
     val likes = Likes(100)
